/* NonVolatileMemory.h: Davicom non-volatile memory header for ESL system.      */
/*                                                                              */
/*==============================================================================*/
/* Header Name	: NonVolatileMemory.h                                           */
/* Purpose      : Reading and writing non-volatile memory                       */
/* Autor        : Richard Chuang                                                */
/* Email        : richard_chung@davicom.com.tw                                  */
/* Description  :                                                               */
/* Reference    :                                                               */
/* Copyright    : (c) Davicom Semiconductor Inc. All Rights Reserved.           */
/* -----------------------------------------------------------------------------*/
/* Version      : 1.0.0.0                                                       */
/* Update       : 2018-03-01                                                    */
/* Modified     : Richard Chung                                                 */
/* Description	:                                                               */
/* -----------------------------------------------------------------------------*/
/* How to use:                                                                  */
/*                                                                              */
#ifndef _DAVICOM_NON_VOLATILE_MEMORY_H_
#define _DAVICOM_NON_VOLATILE_MEMORY_H_

#include "ProjectConfig.h"
#include "Flash.h"

#pragma pack(1)
#pragma pack()

// Tag Flash Mapping
//
//0x00020000 +-----------------------------------------------------------------+
//           | Update Code                                                     |
//0x00030000 +-----------------------------------------------------------------+
//           | Tag Font                                                        |
//0x00031800 +-----------------------------------------------------------------+
//           | Tag Bitmap                                                      |
//           +-----------------------------------------------------------------+
//           ~                                                                 ~                 
//0x0003EF00 +-----------------------------------------------------------------+ 
//           | NvmData (N Bytes)                                               | 
//0x0003EF80 +-----------------------------------------------------------------+ 
//           | OTA table (128 Bytes)                                           |
//           +-----------------------------------------------------------------+
//

// Scanner Flash Mapping
//
//0x00020000 +-----------------------------------------------------------------+
//           | Update Code                                                     |
//0x00030000 +-----------------------------------------------------------------+
//           | Tag Font                                                        |
//0x00031800 +-----------------------------------------------------------------+
//           | Tag Bitmap                                                      |
//           +-----------------------------------------------------------------+
//           ~                                                                 ~                 
//0x0003ED80 +-----------------------------------------------------------------+ 
//           | NvmData (512 Bytes) See the definition of MAX_NVM_DATA_SIZE     | 
//0x0003EF80 +-----------------------------------------------------------------+ 
//           | OTA table (128 Bytes)                                           |
//           +-----------------------------------------------------------------+

#define FLASH_ADDRESS_UPDATE_CODE		0x00020000
#define FLASH_ADDRESS_FONT				0x00030000
#define FLASH_ADDRESS_BITMAP			0x00031800
#define FLASH_ADDRESS_SCANNER_NVM		0x0003ED80
#define FLASH_ADDRESS_OTA				0x0003EF00

#define FLASH_MAGIC_CODE				0x3094


// Device Name: Davicom ESL Scanner
#define TEXT_DEVICE_NAME				_T('D'), _T('a'), _T('v'), _T('i'), _T('c'), _T('o'), _T('m'), _T(' '), \
										_T('E'), _T('S'), _T('L'), _T(' '), _T('S'), _T('c'), _T('a'), _T('n'), \
										_T('n'), _T('e'), _T('r'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), \
										_T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), \
										_T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), \
										_T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), \
										_T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), \
										_T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0')										

// Vendor Name: Davicom Semiconductor, Inc
#define TEXT_VENDOR_NAME				_T('D'), _T('a'), _T('v'), _T('i'), _T('c'), _T('o'), _T('m'), _T(' '), \
										_T('S'), _T('e'), _T('m'), _T('i'), _T('c'), _T('o'), _T('n'), _T('d'), \
										_T('u'), _T('c'), _T('t'), _T('o'), _T('r'), _T(','), _T(' '), _T('I'), \
										_T('n'), _T('c'), _T('.'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), \
										_T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), \
										_T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), \
										_T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), \
										_T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0')

// Model Name: DM1S10100
#define TEXT_MODEL_NAME					_T('D'), _T('M'), _T('1'), _T('S'), _T('1'), _T('0'), _T('2'), _T('0'), \
										_T('0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), \
										_T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), \
										_T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), \
										_T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), \
										_T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), \
										_T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), \
										_T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0')	

// Manufacturer: Davicom Semiconductor, Inc.
#define TEXT_MANUFACTURER_NAME			_T('D'), _T('a'), _T('v'), _T('i'), _T('c'), _T('o'), _T('m'), _T(' '), \
										_T('S'), _T('e'), _T('m'), _T('i'), _T('c'), _T('o'), _T('n'), _T('d'), \
										_T('u'), _T('c'), _T('t'), _T('o'), _T('r'), _T(','), _T(' '), _T('I'), \
										_T('n'), _T('c'), _T('.'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), \
										_T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), \
										_T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), \
										_T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), \
										_T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0'), _T('\0') 

//==============================================================================
//--- Declarative Functions ---
//==============================================================================
//------------------------------------------------------------------------------
//--- Declarative constructor ---
//------------------------------------------------------------------------------
void NonVolatileMemory(void);

//------------------------------------------------------------------------------
//--- Declarative Public Functions ---
//------------------------------------------------------------------------------
void NonVolatileMemoryInit(void);
void NonVolatileMemoryWriteConfiguration(void);
bool NonVolatileMemoryReadConfiguration(ESL_NVM_DATA *pstNvmData);
void NonVolatileMemoryShowInforamtion(void);
bool NonVolatileMemoryWrite(LPBYTE lpbyDestination, uint32_t uiDestinationLength, LPBYTE lpbySource, uint32_t uiSourceLength);
bool NonVolatileMemoryFactoryDefault(void);
//------------------------------------------------------------------------------
//--- Declarative Protected Functions ---
//------------------------------------------------------------------------------


//==============================================================================
//--- Declarative Variables ---
//==============================================================================
//------------------------------------------------------------------------------
//--- Declarative Global Variables ---
//------------------------------------------------------------------------------
extern ESL_NVM_DATA g_stNvmMappingData;
extern const ESL_NVM_DATA g_stNvmData;



#endif		//_DAVICOM_NON_VOLATILE_MEMORY_H_
